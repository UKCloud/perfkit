#!/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
if [[ "$1" == "UKCloud-OpenStack" ]]; then
  SERVICE_PROVIDER="UKCloud"
  CLOUD="OpenStack"
  IMAGE="Ubuntu 14.04 amd64"
  OPENSTACK_NETWORK="perfkit_net"
  VOLUME_SIZE="20"
  FLAVOR="t1.tiny"
  ZONE="0000c-1"
elif [[ "$1" == "AWS-UK" ]]; then
  SERVICE_PROVIDER="AWS"
  CLOUD="AWS"
  VOLUME_SIZE="20"
  FLAVOR="t2.micro"
  ZONE="eu-west-2"
elif [[ "$1" == "AWS-US" ]]; then
  SERVICE_PROVIDER="AWS"
  CLOUD="AWS"
  VOLUME_SIZE="20"
  FLAVOR="t2.micro"
  ZONE="us-east-1"
elif [[ "$1" == "Azure" ]]; then
  SERVICE_PROVIDER="Azure"
  CLOUD="Azure"
  VOLUME_SIZE="20"
  FLAVOR="Standard_A1"
  ZONE="uksouth"
fi
NUM_VMS=20
DATE=$(date +%d%m%Y)

benchmarks=( iperf cluster_boot copy_throughput block_storage_workload sysbench_oltp mongodb_ycsb hpcc sysbench_oltp unixbench ping)
source /home/ubuntu/openstack_rc.sh
cd /opt/PerfKitBenchmarker/

echo "Running all benchmarks in parallel"
for benchmark in ${benchmarks[@]}; do
    case $benchmark in
    oldisim )
       EXTRA_OPTIONS="--oldisim_num_leaves=$NUM_VMS"
    ;;
    aerospike )
       EXTRA_OPTIONS="--aerospike_storage_type=disk --num_vms=$NUM_VMS"
    ;;
    * )
       EXTRA_OPTIONS="--num_vms=$NUM_VMS"
    ;;
    esac
     if [[ "$1" == "UKCloud-OpenStack" ]]; then
       EXTRA_OPTIONS="$EXTRA_OPTIONS --openstack_volume_size=$VOLUME_SIZE --openstack_network=\"$OPENSTACK_NETWORK\" --ip_addresses=INTERNAL --image=\"$IMAGE\"" 
    fi
    echo "./pkb.py --benchmarks=\"$benchmark\" --json_path=\"/opt/results/$SERVICE_PROVIDER.$FLAVOR.$benchmark.$DATE.results.json\" --cloud=\"$CLOUD\" --machine_type=\"$FLAVOR\" --zones=\"$ZONE\" --metadata=\"cloud_provider:$SERVICE_PROVIDER\" --openstack_volume_size=$VOLUME_SIZE --data_disk_size=$VOLUME_SIZE $EXTRA_OPTIONS" >> /opt/logs/cmdDetails.log
    ./pkb.py --benchmarks="$benchmark" --json_path="/opt/results/$SERVICE_PROVIDER.$FLAVOR.$benchmark.$DATE.results.json" --cloud="$CLOUD" --machine_type="$FLAVOR" --zones="$ZONE" --metadata="cloud_provider:$SERVICE_PROVIDER" --openstack_volume_size=$VOLUME_SIZE --data_disk_size=$VOLUME_SIZE $EXTRA_OPTIONS > /opt/logs/$benchmark.log 2>&1 &
    sleep 60
    echo "Starting $benchmark"
done

while ps aux | grep pkb.py | grep -v grep > /dev/null ;do
    echo "Waiting for benchmarks to finish..."
    sleep 60
done

echo "Run completed."
